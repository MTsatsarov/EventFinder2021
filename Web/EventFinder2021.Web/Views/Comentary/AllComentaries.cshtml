@using EventFinder2021.Web.ViewModels.ComentaryModels
@using Microsoft.AspNetCore.Identity
@using EventFinder2021.Data.Models
@inject UserManager<ApplicationUser> UserManager
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf

@{
    var currentUserId = this.UserManager.GetUserId(this.User);
    var comentary = new ComentaryViewModel();
}
@functions
{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}
@model List<ComentaryViewModel>

<body>
    <table class="col-md-8  justify-content-md-center border-info">
        <tbody>
            @for (int i = 0; i < Model.Count; i++)
            {
                comentary = Model[i];
                <tr class="bg-primary ">
                    <td>
                        <div class="_2b05">@comentary.UserName</div>
                    </td>
                </tr>
                <tr class="bg-success flex-md-fill">
                    <td class=" table-bordered">
                        <div>@comentary.Content</div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <button id="@comentary.ComentaryId" type="submit" class="btn-success" onclick="Like(this.id)" value="@comentary.ComentaryId">Like @comentary.LikesCount</button>
                    </td>
                </tr>
                @foreach (var reply in comentary.Replies)
                {
                    <tr>
                        <td>
                            <div> @reply.UserName</div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <button id="@reply.ReplyId" type="submit" class="btn-success" onclick="LikeReply(this.id)" value="@reply.ReplyId">Like</button>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div>@reply.Content</div>
                        </td>
                    </tr>




                }
                <tr>
                    <td>
                        <a class="btn" asp-controller="Reply" asp-action="WriteReply" asp-route-id="@comentary.ComentaryId">Reply</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>



</body>
<script>

  
</script>
<script>
        function Like(clicked_id) {
      var xhttp = new XMLHttpRequest();
            xhttp.open('POST', "/Comentary/LikeComentary", true);
            xhttp.setRequestHeader("Content-Type", "application/json");
            xhttp.setRequestHeader("RequestVerificationToken", "@GetAntiXsrfRequestToken()");
            xhttp.onreadystatechange = function ()
            {
                     if (this.readyState == 4 && this.status == 200) {
                         // Response
                         var responseText = JSON.parse(this.responseText);
                         var count = responseText.count
                         document.getElementById(clicked_id).innerText = count;

                     }
            };
            var data = { userId: '@currentUserId', comentaryId: clicked_id };
            xhttp.send(JSON.stringify(data));
        }
</script>

<script>
        function LikeReply(clicked_id) {
      var xhttp = new XMLHttpRequest();
            xhttp.open('POST', "/Reply/LikeReply", true);
            xhttp.setRequestHeader("Content-Type", "application/json");
            xhttp.setRequestHeader("RequestVerificationToken", "@GetAntiXsrfRequestToken()");
            xhttp.onreadystatechange = function ()
            {
                     if (this.readyState == 4 && this.status == 200) {
                         // Response
                         var responseText = JSON.parse(this.responseText);
                         var count = responseText.count
                         document.getElementById(clicked_id).innerText = count;

                     }
            };
            var data = { userId: '@currentUserId', replyId: clicked_id };
            xhttp.send(JSON.stringify(data));
        }
</script>